services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: marketplace-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: marketplace_db
      POSTGRES_USER: marketplace_user
      POSTGRES_PASSWORD: marketplace_password
    ports:
      - "5436:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - marketplace-network

  # Redis for Caching and Queues
  redis:
    image: redis:7-alpine
    container_name: marketplace-redis
    restart: unless-stopped
    ports:
      - "6386:6379"
    volumes:
      - redis_data:/data
    networks:
      - marketplace-network

  # Elasticsearch for Search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: marketplace-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - marketplace-network

  # MinIO for S3-compatible storage (local development)
  minio:
    image: minio/minio
    container_name: marketplace-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - marketplace-network

  # Marketplace Application
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: marketplace-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://marketplace_user:marketplace_password@postgres:5432/marketplace_db
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: your-super-secret-key-change-in-production
      REDIS_URL: redis://redis:6379
      ELASTICSEARCH_URL: http://elasticsearch:9200
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_S3_ENDPOINT: http://minio:9000
      AWS_S3_BUCKET: marketplace-uploads
    depends_on:
      - postgres
      - redis
      - elasticsearch
      - minio
    networks:
      - marketplace-network
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next

  # Queue Worker (for background jobs)
  worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: marketplace-worker
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://marketplace_user:marketplace_password@postgres:5432/marketplace_db
      REDIS_URL: redis://redis:6379
    command: npm run queue:worker
    depends_on:
      - postgres
      - redis
    networks:
      - marketplace-network
    volumes:
      - .:/app
      - /app/node_modules

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local
  minio_data:
    driver: local

networks:
  marketplace-network:
    driver: bridge